<?php defined('BASEPATH') OR exit('No direct script access allowed');class Single_choice extends Admin_Core_Controller{    public function __construct()    {        parent::__construct();        //check auth        if (!is_admin())         {            redirect('login');        }        //check permission        if (!show_admin_panel())         {            redirect('admin/login');        }    }        /*** Add City */    public function add()    {        $data['title'] = trans("add_ques");		$data['question_categories'] = $this->question_category_model->get_all_categories();		$data['question_difficulty_levels'] = $this->question_difficulty_level_model->get_all_difficulty_levels();		$data['question_types'] = $this->question_type_model->get_all_question_types();		$data['question_topics'] = $this->topic_model->get_all_topics();        $this->load->view('admin/includes/_header', $data);        $this->load->view('admin/single_choice/add', $data);        $this->load->view('admin/includes/_footer');    }    /*** Add City Post */    public function add_ques()    {        //validate inputs        $this->form_validation->set_rules('que_category', trans("question_category"), 'required|xss_clean');		$this->form_validation->set_rules('que_language', trans("language"), 'required|xss_clean');		$this->form_validation->set_rules('que_topic', trans("topic"), 'required|xss_clean');		$this->form_validation->set_rules('que_difficulty_level', trans("question_difficulty_level"), 'required|xss_clean');		$this->form_validation->set_rules('que_type', trans("question_type"), 'required|xss_clean');		$this->form_validation->set_rules('que_question', trans("question"), 'required|xss_clean');		$que_question = $this->input->post('que_question', true);		if (!$this->single_choice_model->is_unique_field($que_question)) 		{		    $this->session->set_flashdata('form_data', $this->single_choice_model->input_values());		    $this->session->set_flashdata('error', trans("message_field_already_error"));		    redirect($this->agent->referrer());		}        if ($this->form_validation->run() === false)         {            $this->session->set_flashdata('errors', validation_errors());            $this->session->set_flashdata('form_data', $this->single_choice_model->input_values());            redirect($this->agent->referrer());        }         else         {            if ($this->single_choice_model->add())             {                $last_id = $this->db->insert_id();				$this->session->set_flashdata('success', trans("question") . " " . trans("msg_suc_added"));                redirect($this->agent->referrer());            }             else             {                $this->session->set_flashdata('form_data', $this->single_choice_model->input_values());                $this->session->set_flashdata('error', trans("msg_error"));                redirect($this->agent->referrer());            }        }    }    /*** City List View */    public function listview()    {        $data['title'] = trans("single_choice_ques");        $data['questions'] = $this->single_choice_model->get_all_single_choice();        $data['lang_search_column'] = 2;        $this->load->view('admin/includes/_header', $data);        $this->load->view('admin/single_choice/listview', $data);        $this->load->view('admin/includes/_footer');    }    /*** Update City */    public function update($id)    {        $data['title'] = trans("update_ques");		$data['question_categories'] = $this->question_category_model->get_all_categories();		$data['question_difficulty_levels'] = $this->question_difficulty_level_model->get_all_difficulty_levels();		$data['question_types'] = $this->question_type_model->get_all_question_types();		$data['question_topics'] = $this->topic_model->get_all_topics();		$data['questions'] = $this->single_choice_model->get_single_choice_by_id($id);        if (empty($data['questions']))         {            redirect($this->agent->referrer());        }		        $this->load->view('admin/includes/_header', $data);        $this->load->view('admin/single_choice/update', $data);        $this->load->view('admin/includes/_footer');    }    /*** Update City Post */    public function update_ques()    {        //validate inputs        $this->form_validation->set_rules('que_category', trans("question_category"), 'required|xss_clean');		$this->form_validation->set_rules('que_topic', trans("que_topic"), 'required|xss_clean');		$this->form_validation->set_rules('que_difficulty_level', trans("question_difficulty_level"), 'required|xss_clean');		$this->form_validation->set_rules('que_type', trans("question_type"), 'required|xss_clean');		$this->form_validation->set_rules('que_question', trans("que_question"), 'required|xss_clean');	        if ($this->form_validation->run() === false)         {            $this->session->set_flashdata('errors', validation_errors());            $this->session->set_flashdata('form_data', $this->question_type_model->input_values());            redirect($this->agent->referrer());        }         else         {            //get id            $que_id = $this->input->post('que_id', true);            $que_question = $this->input->post('que_question', true);            if (!$this->single_choice_model->is_unique_field($que_question, $que_id)) {                $this->session->set_flashdata('error', trans("message_field_already_error"));                redirect($this->agent->referrer());            }                        if ($this->single_choice_model->update($que_id))             {				$this->session->set_flashdata('success', trans("que_question") . " " . trans("msg_suc_updated"));                redirect('single_choice/listview');            }             else             {                $this->session->set_flashdata('form_data', $this->single_choice_model->input_values());                $this->session->set_flashdata('error', trans("msg_error"));                redirect($this->agent->referrer());            }        }    }    /*** Delete City Post */    public function delete_question()    {        $id = $this->input->post('que_id', true);        $que_question = $this->single_choice_model->get_single_choice_by_id($id);        if (empty($que_question))         {            redirect($this->agent->referrer());        }        if ($this->single_choice_model->delete($id))         {            $this->session->set_flashdata('success', trans("que_question") . " " . trans("msg_suc_deleted"));            redirect($this->agent->referrer());        } else         {            $this->session->set_flashdata('error', trans("msg_error"));            redirect($this->agent->referrer());        }    }}