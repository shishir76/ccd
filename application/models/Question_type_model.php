<?phpdefined('BASEPATH') OR exit('No direct script access allowed');class Question_type_model extends CI_Model{    //input values    public function input_values()    {		$data = array(            'lang_id' => $this->input->post('lang_id', true),            'question_type' => $this->input->post('question_type', true),            'short_desc' => $this->input->post('short_desc', true),            'large_desc' => $this->input->post('large_desc', true),            'status' => $this->input->post('status', true),        );        return $data;    }    //add    public function add()    {        $data = $this->input_values();        return $this->db->insert('question_type', $data);    }    //update    public function update($id)    {        //set values        $data = $this->input_values();        $this->db->where('id', $id);        return $this->db->update('question_type', $data);    }	    //get all data    public function get_all_question_types()    {        $this->db->order_by('question_type.question_type', 'ASC');        $query = $this->db->get('question_type');        return $query->result();    }    //get data by id    public function get_question_type($id)    {        $this->db->where('question_type.id', $id);        $query = $this->db->get('question_type');        return $query->row();    }    //get unique    public function get_question_type_by_name($question_type)    {        $this->db->where('question_type.question_type', $question_type);        $query = $this->db->get('question_type');        return $query->row();    }        //delete    public function delete($id)    {        $category = $this->get_question_type($id);        if (!empty($category)) {			$this->db->where('question_type.id', $id);            return $this->db->delete('question_type');        } else {            return false;        }    }	    //check if field is unique    public function is_unique_field($question_type, $type_id = 0)    {        $question_type = $this->question_type_model->get_question_type_by_name($question_type);         //if id doesnt exists        if ($type_id == 0)         {            if (empty($question_type))             {                return true;            }             else             {                return false;            }        }        if ($type_id != 0)         {            if (!empty($question_type) && $question_type->id == $type_id)             {                //field taken                return true;            }             else             {                return false;            }        }    }}